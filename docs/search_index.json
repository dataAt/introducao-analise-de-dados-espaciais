[
["introducao-ao-postgis.html", "1 Introdu√ß√£o ao postgis üêò 1.1 Instala√ß√£o 1.2 Um pouco de SQL", " 1 Introdu√ß√£o ao postgis üêò Uma das principais caracter√≠sticas que diferenciam os bancos de dados geogr√°ficos dos demais bancos de dados convencionais, √© a presen√ßa de uma coluna com a finalidade de armazenar uma propriedade geogr√°fica do registro. Al√©m disso , os bancos de dados geogr√°ficos tamb√©m devem oferecer de forma otimizada suporte √† opera√ß√µes espaciais. Diferente de um passado n√£o muito distante, atualmente existem muitas alternativas de bancos de dados geogr√°ficos, como: SQL Server Spatial, ESRI ArcSDE, Oracle Spatial, GeoMesa, PostGIS, etc. Cada uma destas op√ß√µes tem o objetivo em comum trabalhar com dados geogr√°ficos e todas est√£o sendo muito utlizadas em diversos segmentos nos dias de hoje, sendo o PostGIS a mais popular de todas. O PostGIS √© uma extens√£o geogr√°fica open source para o SGDB (Sistema Gerenciador de Banco de Dados) PostgreSQL, lan√ßada em 2001 inicialmente por uma empresa canadense chamada Refractions Research. O PostGIS segue a padroniza√ß√£o estabelecida pelo OGC (Open GIS Consortium), que prov√™ suporte para todos os objetos e fun√ß√µes da especifica√ß√£o SFS (Simple Features for SQL). De forma concisa, a especifica√ß√£o SFS foi criada pelo OGC (cons√≥rcio formado por empresas, universidades, etc) e trata das quest√µes de representa√ß√£o da componente espacial e vetorial dos dados geogr√°ficos, garantindo assim, a interoperabilidade entre os sistemas os utilizam. Este cap√≠tulo tem como objetivo introduzir ao leitor √† extens√£o espacial PostGIS . Ao final, o leitor dever√° est√° apto a configurar corretamente o ambiente para a utiliza√ß√£o da ferramente, carregar arquivos vetoriais e realizar opera√ß√µes espaciais. 1.1 Instala√ß√£o Como o PostGIS √© uma extens√£o do PostgreSQL, primeiramente dever√° ser feita a instala√ß√£o do SGBD. Importante: N√£o esque√ßa o nome de usu√°rio e senha que voc√™ definir durante a instala√ß√£o, pois essas informa√ß√µes ser√£o de suma import√¢ncia, anote se necess√°rio. A vers√£o do PostgreSQL utilizada aqui √© ser√° a 11.5. A instala√ß√£o do PostgreSQL e PostGIS no sistema operacional windows, pode ser feita atrav√©s do instalador dispon√≠vel nesse link, para isso fique atento durante a instala√ß√£o e na segunda tela do assistente, no item Spatial Extensions marque a op√ß√£o PostGIS. A instala√ß√£o do PostgreSQL e PostGIS no sistema Operacional MacOS pode ser feita atrav√©s do gerenciador de pacotes brew, utilizado os seguintes comandos: brew install postgres brew install postgis Para a instala√ß√£o nos sistemas operacionais linux, utilize os seguintes comandos : sudo apt install postgresql postgresql-contrib sudo apt-get install postgis Para verificar se a instala√ß√£o do PostgreSQL foi realizada corretamente, abra o terminal e digite o seguinte comando: psql --version Se tudo ocorreu bem, dever√° aparecer uma sa√≠da com a vers√£o do PostgreSQL, algo parecido com psql (PostgreSQL) 11.5. Para verificar a instala√ß√£o do PostGIS, abra o terminal e execute o seguinte comando para abrir o interpretador do PostgreSQL: sudo -u &lt;user&gt; psql Obs: Substitua o trecho &lt;user&gt; para o usu√°rio do PostgreSQL definido na instala√ß√£o. Com o terminal do PostgreSQL aberto, execute o seguinte comando para verificar a vers√£o do PostGIS: SELECT PostGIS_version(); Se tudo estiver certo, dever√° aparecer como sa√≠da a vers√£o do PostGIS. Para sair do interpretador psql, basta executar o comando \\q. E com isso finalizamos as configura√ß√£o iniciais necess√°rias iniciar os trabalhos com o PostGIS. Para mais informa√ß√µes, consulte a p√°gina oficial do PostGIS em: https://postgis.net/install. Na pr√≥xima se√ß√£o iremos criar um banco de dados novo e habilitar nele a extens√£o espacial PostGIS, para que possam ser executadas as nossas primeiras consultas espaciais. 1.2 Um pouco de SQL SQL (Structured Query Language) √© linguagem padr√£o de consultas declarativas dos bancos de dados relacionais. Ela foi concebida na d√©cada de 1970, como resultado de um estudo feito por Edgar Frank Codd, que na √©poca era funcion√°rio da IBM, e prop√¥s o modelo de banco de dados relacional (Codd 1970) que em sua ess√™ncia √© utilizado at√© os dias de hoje. Como dito anteriormente, o PostGIS √© uma extens√£o espacial que funciona sobre o SGBD PosgreSQL, que utiliza o modelo de banco de dados relacional. Sendo assim, antes de iniciarmos de fato as consultas espaciais como o PostGIS, iremos executar alguns comandos SQL b√°sicos para prepara√ß√£o do ambiente. 1.2.1 Acessando a interface PostgreSQL O psql √© uma interface padr√£o que funciona por linha de comando, e permite interagir rapidamente com o PostgreSQL. Como o foco deste material √© a apenas apresentar alguns recursos do PostGIS, iremos executar as consultas SQL usando o psql, o que n√£o √© muito recomendado se trabalhar com esquemas mais complexos de bancos de dados, para isso, podem ser utilizado outras interfaces mais agrad√°vies e eficienes como o pgAdmin. Para acessar o psql execute o comando abaixo, substituindo o trecho &lt;user&gt;, pelo nome de usu√°rio postgres que foi definido durante a instala√ß√£o: sudo -u &lt;user&gt; psql Ao ser solicitado a senha, digite a senha de administrador do seu sistema operacional. O psql possui algumas utilit√°rio para o geraciomento do PostgreSQL, use o comando \\l para listar todos os bancos de dados dispon√≠veis, em sua m√°quina. Algo parecido com o que mostrado na Figura 1.1 dever√° aparecer. Figure 1.1: Listando todos os banco de dados atrav√©s do psql. Normalmente, a instala√ß√£o padr√£o do PostgreSQL cria algumas bases de dados. A seguir, iremos utilizar comandos SQL para criar um novo banco de dados e tamb√©m adicionar a extens√£o espacial do PostGIS. 1.2.2 Criando uma nova base de dados A linguagem SQL √© organizada em alguns subconjuntos, cada um deles com comando espec√≠ficos para determinadas tarefas. A Figura 1.2 mostra a os subconjuntos que comp√µe a linguagem SQL. Figure 1.2: Listando todos os banco de dados atrav√©s do psql. DDL - Data Definition Laguage (Linguagem de Defini√ß√£o de Dados): √â o subconjunto de instru√ß√µes da linguagem SQL respons√°vel por manipular diretamente o esquema do banco de dados e estrura das tabelas. DML - Data Manipulation Language (Linguagem de Manipula√ß√£o de Dados): √â o subconjunto de instru√ß√µes da linguagem SQL respons√°vel por interagir diretamente com os dados das tabelas. DCL - Data Control Language (Linguagem de Controle de Dados): √â o subconjunto de instru√ß√µes da linguagem SQL respons√°vel por administrar a seguran√ßa das bases de dados, adicionando ou removendo permiss√µes. TCL - Transaction Control Language (Linguagem de Controle de Transa√ß√£o): √â o subconjunto de instru√ß√µes da linguagem SQL respons√°vel por gerenciar as transa√ß√µes das consultas SQL. Neste material, o escopo abordado ser√° apenas alguns comando do subconjunto DDL e DML. Para mais informa√ß√µes a respeito do gerenciamento de banco de dados e a organiza√ß√£o da linguagem SQL, recomenda-se a leitura do trabalho de (Kumar, Raheja, and Sachdeva 2012), o qual aborada com mais aprofundamento estes t√≥picos. Agora iremos criar um banco de dados para trabalharmos com os recursos espacias do PostGIS, para isso execute o comando a seguir: CREATE DATABASE dbgeo; O comando acima cria um novo banco de dados chamado dbgeo. Caso queira o criar um banco de dados com o nome diferente, utilize o mesmo comando substituindo o trecho dbgeo pelo nome desejado. Ap√≥s receber a mensagem de confirma√ß√£o, ser√° necess√°rio mudar o interpretador psql para o novo banco de dados criado, para isso utilize o seguinte comando: \\l dbgeo; Note que o trecho dbgeo √© o nome da base de dados que foi criada no passo anterior. Se tudo estiver ocorrido bem, dever√° aparecer a confirma√ß√£o conforme a Figura 1.3. Figure 1.3: Criando e alterando base dados. Por fim, para habilitarmos a nova base de dados para suportar opera√ß√µes com dados espaciais, iremos adicionar a extens√£o PostGIS. Para isso, execute o seguinte comando: CREATE EXTENSION postgis; Ap√≥s adicionarmos a extens√£o PostGIS em nosso banco de dados, vamos criar a nossa primeira tabela com atributos geom√©tricos. Para isso, iremos criar como exemplo uma tabela simples onde ser√° armazenado o modelo de rede de detec√ß√£o de raios, e sua posi√ß√£o geogr√°fica (latitude/longitude), com isso praticaremos os conceitos da geometria do tipo ponto. Sendo assim, execute o seguinte comando em seu terminal: CREATE TABLE lightning_network( id serial PRIMARY KEY, model VARCHAR(15) NOT NULL, location GEOMETRY NOT NULL ); Observe que o atributo location da tabela, possui o tipo definido como GEOMETRY, esse √© um dos recursos que o PostGIS, prov√™ ao banco de dados, e tem como finalidade permitir que seja armazenado nessa coluna objetos geometricos. A seguir iremos popular nossa tabela, e realizar algumas opera√ß√µes espaciais. Mas antes disso, ser√° abordado brevemente a linguagem de marca√ß√£o de texto que permite a cria√ß√£o objetos vetoriais, o Well-known text (WKT). 1.2.3 Well-known text O WKT foi originalment proposto pela OGC, e sendo descrita pelo Simple Feature Access (OGC 2011). A forma equivalente do WKT em bin√°rio Well-known binary (WKB), tamb√©m est√° descrita no SFA, e √© como a geomeria √© armazenado nas tabelas. A tabela a seguir mostra os os principais tipos geom√©tricos e suas respectivas representa√ß√µes em WKT. Tipo Geometria WKT Ponto POINT (30 10) Segmento LINESTRING (30 10, 10 30, 40 40) Pol√≠gono POLYGON ((30 10, 40 40, 20 40, 10 20, 30 10)) Multi-Ponto MULTIPOINT (10 40, 40 30, 20 20, 30 10) Multi-Segmento MULTILINESTRING ((10 10, 20 20, 10 40), (40 40, 30 30, 40 20, 30 10)) Muli-Pol√≠gono MULTIPOLYGON (((30 20, 45 40, 10 40, 30 20)), ((15 5, 40 10, 10 20, 5 10, 15 5))) Cole√ß√£o GEOMETRYCOLLECTION (POINT (40 10), LINESTRING (10 10, 20 20, 10 40), POLYGON ((40 40, 20 45, 45 30, 40 40))) Princiapais represeta√ß√µes geom√©tricas em WKT. Adaptado Wikp√©dia . Para mais informa√ß√µes a respeito do WKT e WKB, recomenda-se a leitura do manual da Simple Feature. INSERT INTO lightning_network(model, location) VALUES(&#39;LINET&#39;, &#39;POINT(-23.55 -46.73)&#39;); INSERT INTO lightning_network(model, location) VALUES(&#39;GLD360&#39;, &#39;POINT(-3.01 -60.05)&#39;); Observe que para inserir a geolocaliza√ß√£o de cada rede de detec√ß√£o foi utilizada uma s√≠ntaxe bem peculiar. Esse formato diz respeito ao WKT (Well-known text), uma linguagem de marca√ß√£o de texto para trabalhar com objetos geometricas. sasds "],
["references.html", "2 References", " 2 References "]
]
